name: $(majorVersion).$(minorVersion).$(Rev:r)

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  pathToSolutionFile: 'CacheMeIfYouCan.sln'
  pathToMainTestProject: 'tests/CacheMeIfYouCan.Tests/CacheMeIfYouCan.Tests.csproj'
  pathToCronTestProject: 'tests/CacheMeIfYouCan.Cron.Tests/CacheMeIfYouCan.Cron.Tests.csproj'
  pathToPollyTestProject: 'tests/CacheMeIfYouCan.Polly.Tests/CacheMeIfYouCan.Polly.Tests.csproj'
  pathToRedisTestProject: 'tests/CacheMeIfYouCan.Redis.Tests/CacheMeIfYouCan.Redis.Tests.csproj'
  
steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: '$(pathToSolutionFile)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test CacheMeIfYouCan'
  inputs:
    command: 'test'
    arguments: '$(pathToMainTestProject) --framework netcoreapp3.1 --configuration $(buildConfiguration) --no-build'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test CacheMeIfYouCan.Cron'
  inputs:
    command: 'test'
    arguments: '$(pathToCronTestProject) --framework netcoreapp3.1 --configuration $(buildConfiguration) --no-build'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test CacheMeIfYouCan.Polly'
  inputs:
    command: 'test'
    arguments: '$(pathToPollyTestProject) --framework netcoreapp3.1 --configuration $(buildConfiguration) --no-build'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test CacheMeIfYouCan.Redis'
  inputs:
    command: 'test'
    arguments: '$(pathToRedisTestProject) --framework netcoreapp3.1 --configuration $(buildConfiguration) --no-build'

- task: DotNetCoreCLI@2
  displayName: "dotnet pack"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration) --no-build'
    packagesToPack: 'src/**/*.csproj'
    nobuild: true
    versioningScheme: 'byBuildNumber'

- task: NuGetCommand@2
  displayName: 'nuget push'
  inputs:
    command: 'push'
    feedsToUse: 'select'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'Default'