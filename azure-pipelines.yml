name: $(majorVersion).$(minorVersion).$(Rev:r)

trigger:
- v0.2

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  pathToMainProject: 'src/CacheMeIfYouCan/CacheMeIfYouCan.csproj'
  pathToMainTestProject: 'tests/CacheMeIfYouCan.Tests/CacheMeIfYouCan.Tests.csproj'
  pathToPollyProject: 'src/CacheMeIfYouCan.Polly/CacheMeIfYouCan.Polly.csproj'
  pathToPollyTestProject: 'tests/CacheMeIfYouCan.Polly.Tests/CacheMeIfYouCan.Polly.Tests.csproj'
  pathToRedisProject: 'src/CacheMeIfYouCan.Redis/CacheMeIfYouCan.Redis.csproj'
  pathToRedisTestProject: 'tests/CacheMeIfYouCan.Redis.Tests/CacheMeIfYouCan.Redis.Tests.csproj'
  
steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet build CacheMeIfYouCan'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: '$(pathToMainProject)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build CacheMeIfYouCan.Polly'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: '$(pathToPollyProject)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build CacheMeIfYouCan.Redis'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: '$(pathToRedisProject)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test CacheMeIfYouCan'
  inputs:
    command: 'test'
    arguments: '$(pathToMainTestProject) --framework netcoreapp3.1 --configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test CacheMeIfYouCan.Polly'
  inputs:
    command: 'test'
    arguments: '$(pathToPollyTestProject) --framework netcoreapp3.1 --configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test CacheMeIfYouCan.Redis'
  inputs:
    command: 'test'
    arguments: '$(pathToRedisTestProject) --framework netcoreapp3.1 --configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "dotnet pack"
  inputs:
    command: 'pack'
    arguments: '--no-build --configuration $(buildConfiguration)'
    packagesToPack: 'src/**/*.csproj'
    nobuild: true
    versioningScheme: 'byBuildNumber'

- task: NuGetCommand@2
  displayName: 'nuget push'
  inputs:
    command: 'push'
    feedsToUse: 'select'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'Default'